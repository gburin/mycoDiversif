
######################
##Analysis per species
######################

family.data <- read.csv("./data/family_data_full.csv", stringsAsFactors = FALSE)

## Filtering for families with more than 5% or 8 species

family.data.clean <- family.data[family.data$samp.sp >= 8 | family.data$perc.rich >= 0.05,]

## Identifying the families used in the study for later plotting
family.data$study <- "no"
family.data$study[family.data$samp.sp >= 8 | family.data$perc.rich >= 0.05] <- "yes"

fulltree <- read.tree("./data/fam_tree_family_full.tre")
fulltree$node.label <- NULL
fulltree.vasc <- read.tree("./data/Vascular_Plants_rooted.dated.tre")

## Removing Orchidaceae and Ericaceae from analyses
family.data.clean <- family.data.clean[-match(c("Orchidaceae", "Ericaceae"), family.data.clean$family),]

## Dropping families without reliable mycorrhizal data
tree.pruned <- drop.tip(fulltree, tip = fulltree$tip.label[is.na(match(fulltree$tip.label, family.data.clean$family))])

## Calculating diversification rates using the method-of-moments (MagallÃ³n & Sanderson, 2001)
family.data.clean$r.e0.stem <- bd.ms(time = family.data.clean$stem.age, n = family.data.clean$global.rich, crown = FALSE, epsilon = 0)
family.data.clean$r.e05.stem <- bd.ms(time = family.data.clean$stem.age, n = family.data.clean$global.rich, crown = FALSE, epsilon = 0.5)
family.data.clean$r.e09.stem <- bd.ms(time = family.data.clean$stem.age, n = family.data.clean$global.rich, crown = FALSE, epsilon = 0.9)

family.data.clean$r.e0.crown <- bd.ms(time = family.data.clean$crown.age, n = family.data.clean$global.rich, crown = TRUE, epsilon = 0)
family.data.clean$r.e05.crown <- bd.ms(time = family.data.clean$crown.age, n = family.data.clean$global.rich, crown = TRUE, epsilon = 0.5)
family.data.clean$r.e09.crown <- bd.ms(time = family.data.clean$crown.age, n = family.data.clean$global.rich, crown = TRUE, epsilon = 0.9)

family.data.clean$shannon <- vegan::diversity(family.data.clean[, c(4, 5, 6, 8, 9)], index = "shannon")

## Preparing data for PGLS
data.pgls <- comparative.data(tree.pruned, family.data.clean[, -16], names.col = "family")

## Testing for correlation between Stem age and Species Richness (both considering or not the phylogenetic structure)

stem.rich.phylo <- pgls(global.rich ~ stem.age, data = data.pgls, lambda = "ML")

stem.rich.std <- lm(global.rich ~ stem.age, data = family.data.clean)


## Testing for correlation between Crown age and Species Richness (both considering or not the phylogenetic structure)

## crown.rich.phylo <- pgls(global.rich ~ crown.age, data = data.pgls, lambda = "ML")
## summary(crown.rich.phylo)

## crown.rich.std <- lm(global.rich ~ crown.age, data = family.data.clean)
## summary(crown.rich.std)


crown.age.vasc <- max(branching.times(fulltree.vasc))
stem.age.vasc <- max(branching.times(fulltree.vasc)) - findMRCA(fulltree.vasc, c(fulltree.vasc$tip.label[621:622]), type = "height")

## r.vasc.crown.r0 <- bd.ms(time = crown.age.vasc, n = sum(family.data$global.rich), crown = TRUE, epsilon = 0)
## r.vasc.crown.r05 <- bd.ms(time = crown.age.vasc, n = sum(family.data$global.rich), crown = TRUE, epsilon = 0.5)
## r.vasc.crown.r0.9 <- bd.ms(time = crown.age.vasc, n = sum(family.data$global.rich), crown = TRUE, epsilon = 0.9)

r.vasc.stem.r0 <- bd.ms(time = stem.age.vasc, n = sum(family.data$global.rich), crown = FALSE, epsilon = 0)
r.vasc.stem.r05 <- bd.ms(time = stem.age.vasc, n = sum(family.data$global.rich), crown = FALSE, epsilon = 0.5)
r.vasc.stem.r0.9 <- bd.ms(time = stem.age.vasc, n = sum(family.data$global.rich), crown = FALSE, epsilon = 0.9)


### Calculating the the 95% confidence intervals of species richness based on global r, epsilon and time for vascular plants.

## Crown age
## crown.limits(time = crown.age.vasc, r = r.vasc.crown.r0, epsilon = 0)
## crown.limits(time = crown.age.vasc, r = r.vasc.crown.r05, epsilon = 0.5)
## crown.limits(time = crown.age.vasc, r = r.vasc.crown.r0.9, epsilon = 0.9)

## Stem age
stem.limits(time = stem.age.vasc, r = r.vasc.stem.r0, epsilon = 0)
stem.limits(time = stem.age.vasc, r = r.vasc.stem.r05, epsilon = 0.5)
stem.limits(time = stem.age.vasc, r = r.vasc.stem.r0.9, epsilon = 0.9)


### Generating table for plotting

## limits.vasc.crown <- data.frame(
##     time = seq(1, 250, by = 1),
##     t(mapply(crown.limits, seq(1, 250, by = 1), r = r.vasc.crown.r0, epsilon = 0)),
##     t(mapply(crown.limits, seq(1, 250, by = 1), r = r.vasc.crown.r05, epsilon = 0.5)),
##     t(mapply(crown.limits, seq(1, 250, by = 1), r = r.vasc.crown.r0.9, epsilon = 0.9))
##     )
## names(limits.vasc.crown) <- c("age", "lb.0", "ub.0", "lb.05", "ub.05", "lb.09", "ub.09")

limits.vasc.stem <- data.frame(
    time = seq(1, 300, by = 1),
    t(mapply(stem.limits, seq(1, 300, by = 1), r = r.vasc.stem.r0, epsilon = 0)),
    t(mapply(stem.limits, seq(1, 300, by = 1), r = r.vasc.stem.r05, epsilon = 0.5)),
    t(mapply(stem.limits, seq(1, 300, by = 1), r = r.vasc.stem.r0.9, epsilon = 0.9))
    )
names(limits.vasc.stem) <- c("age", "lb.0", "ub.0", "lb.05", "ub.05", "lb.09", "ub.09")



## Calculating Pagel's lambda for each epsilon value
phylosig.r0 <- pgls(r.e0.stem ~ 1, data = data.pgls, lambda = "ML")
phylosig.r05 <- pgls(r.e05.stem ~ 1, data = data.pgls, lambda = "ML")
phylosig.r09 <- pgls(r.e09.stem ~ 1, data = data.pgls, lambda = "ML")

## Fitting PGLS
mod.r0 <- caper::pgls(r.e0.stem ~ shannon, data = data.pgls, lambda = setNames(summary(phylosig.r0)$param[2], NULL))
mod.r05 <- caper::pgls(r.e05.stem ~ shannon, data = data.pgls, lambda = setNames(summary(phylosig.r05)$param[2], NULL))
mod.r09 <- caper::pgls(r.e09.stem ~ shannon, data = data.pgls, lambda = setNames(summary(phylosig.r09)$param[2], NULL))

## Fitting standard linear models
lm.r0 <- lm(r.e0.stem ~ shannon, data = family.data.clean)
lm.r05 <- lm(r.e05.stem ~ shannon, data = family.data.clean)
lm.r09 <- lm(r.e09.stem ~ shannon, data = family.data.clean)

## phylANOVA
data.aov <- family.data.clean[-which(is.na(match(family.data.clean$family, tree.pruned$tip.label))), ]
phyaov.r0 <- phylANOVA(drop.tip(tree.pruned, tip = tree.pruned$tip.label[is.na(match(tree.pruned$tip.label, data.aov$family))]), x = setNames(data.aov$type.60, data.aov$family), y = setNames(data.aov$r.e0.stem, data.aov$family))
phyaov.r05 <- phylANOVA(drop.tip(tree.pruned, tip = tree.pruned$tip.label[is.na(match(tree.pruned$tip.label, data.aov$family))]), x = setNames(data.aov$type.60, data.aov$family), y = setNames(data.aov$r.e05.stem, data.aov$family))
phyaov.r09 <- phylANOVA(drop.tip(tree.pruned, tip = tree.pruned$tip.label[is.na(match(tree.pruned$tip.label, data.aov$family))]), x = setNames(data.aov$type.60, data.aov$family), y = setNames(data.aov$r.e09.stem, data.aov$family))

## Parametric ANOVA
aov.r0 <- aov(r.e0.stem ~ type.60, data = family.data.clean)
aov.r05 <- aov(r.e05.stem ~ type.60, data = family.data.clean)
aov.r09 <- aov(r.e09.stem ~ type.60, data = family.data.clean)

## Appending results to original data frame for plotting
family.data.clean$lm.r0 <- fitted(lm.r0)
family.data.clean$lm.r05 <- fitted(lm.r05)
family.data.clean$lm.r09 <- fitted(lm.r09)

family.data.clean$pgls.r0 <- fitted(mod.r0)[,1][match(family.data.clean$family, names(fitted(mod.r0)[,1]))]
family.data.clean$pgls.r05 <- fitted(mod.r05)[,1][match(family.data.clean$family, names(fitted(mod.r05)[,1]))]
family.data.clean$pgls.r09 <- fitted(mod.r09)[,1][match(family.data.clean$family, names(fitted(mod.r09)[,1]))]


## Age and Richness as a function of Shannon index 

#pgls.crown.age.sh <- caper::pgls(crown.age ~ shannon, data = data.pgls, lambda = "ML")
pgls.stem.age.sh <- caper::pgls(stem.age ~ shannon, data = data.pgls, lambda = "ML")
pgls.rich.sh <- caper::pgls(global.rich ~ shannon, data = data.pgls, lambda = "ML")

lm.crown.age.sh <- lm(crown.age ~ shannon, data = family.data.clean)
lm.stem.age.sh <- lm(stem.age ~ shannon, data = family.data.clean)
lm.rich.sh <- lm(global.rich ~ shannon, data = family.data.clean)







######################
##Analysis per species using records with remarks 'probably XX'
######################

family.data <- read.csv("./data/family_data_full_incl_remarks.csv", stringsAsFactors = FALSE)

## Filtering for families with more than 5% or 8 species

family.data.clean <- family.data[family.data$samp.sp >= 8 | family.data$perc.rich >= 0.05,]

## Identifying the families used in the study for later plotting
family.data$study <- "no"
family.data$study[family.data$samp.sp >= 8 | family.data$perc.rich >= 0.05] <- "yes"

fulltree <- read.tree("./data/fam_tree_family_full.tre")
fulltree$node.label <- NULL
fulltree.vasc <- read.tree("./data/Vascular_Plants_rooted.dated.tre")

## Removing Orchidaceae and Ericaceae from analyses
family.data.clean <- family.data.clean[-match(c("Orchidaceae", "Ericaceae"), family.data.clean$family),]

## Dropping families without reliable mycorrhizal data
tree.pruned <- drop.tip(fulltree, tip = fulltree$tip.label[is.na(match(fulltree$tip.label, family.data.clean$family))])

## Calculating diversification rates using the method-of-moments (MagallÃ³n & Sanderson, 2001)
family.data.clean$r.e0.stem <- bd.ms(time = family.data.clean$stem.age, n = family.data.clean$global.rich, crown = FALSE, epsilon = 0)
family.data.clean$r.e05.stem <- bd.ms(time = family.data.clean$stem.age, n = family.data.clean$global.rich, crown = FALSE, epsilon = 0.5)
family.data.clean$r.e09.stem <- bd.ms(time = family.data.clean$stem.age, n = family.data.clean$global.rich, crown = FALSE, epsilon = 0.9)

family.data.clean$r.e0.crown <- bd.ms(time = family.data.clean$crown.age, n = family.data.clean$global.rich, crown = TRUE, epsilon = 0)
family.data.clean$r.e05.crown <- bd.ms(time = family.data.clean$crown.age, n = family.data.clean$global.rich, crown = TRUE, epsilon = 0.5)
family.data.clean$r.e09.crown <- bd.ms(time = family.data.clean$crown.age, n = family.data.clean$global.rich, crown = TRUE, epsilon = 0.9)

family.data.clean$shannon <- vegan::diversity(family.data.clean[, c(4, 5, 6, 8, 9)], index = "shannon")

## Preparing data for PGLS
data.pgls <- comparative.data(tree.pruned, family.data.clean, names.col = "family")

## Testing for correlation between Stem age and Species Richness (both considering or not the phylogenetic structure)

stem.rich.phylo <- pgls(global.rich ~ stem.age, data = data.pgls, lambda = "ML")

stem.rich.std <- lm(global.rich ~ stem.age, data = family.data.clean)


## Testing for correlation between Crown age and Species Richness (both considering or not the phylogenetic structure)

## crown.rich.phylo <- pgls(global.rich ~ crown.age, data = data.pgls, lambda = "ML")
## summary(crown.rich.phylo)

## crown.rich.std <- lm(global.rich ~ crown.age, data = family.data.clean)
## summary(crown.rich.std)


crown.age.vasc <- max(branching.times(fulltree.vasc))
stem.age.vasc <- max(branching.times(fulltree.vasc)) - findMRCA(fulltree.vasc, c(fulltree.vasc$tip.label[621:622]), type = "height")

## r.vasc.crown.r0 <- bd.ms(time = crown.age.vasc, n = sum(family.data$global.rich), crown = TRUE, epsilon = 0)
## r.vasc.crown.r05 <- bd.ms(time = crown.age.vasc, n = sum(family.data$global.rich), crown = TRUE, epsilon = 0.5)
## r.vasc.crown.r0.9 <- bd.ms(time = crown.age.vasc, n = sum(family.data$global.rich), crown = TRUE, epsilon = 0.9)

r.vasc.stem.r0 <- bd.ms(time = stem.age.vasc, n = sum(family.data$global.rich), crown = FALSE, epsilon = 0)
r.vasc.stem.r05 <- bd.ms(time = stem.age.vasc, n = sum(family.data$global.rich), crown = FALSE, epsilon = 0.5)
r.vasc.stem.r0.9 <- bd.ms(time = stem.age.vasc, n = sum(family.data$global.rich), crown = FALSE, epsilon = 0.9)


### Calculating the the 95% confidence intervals of species richness based on global r, epsilon and time for vascular plants.

## Crown age
## crown.limits(time = crown.age.vasc, r = r.vasc.crown.r0, epsilon = 0)
## crown.limits(time = crown.age.vasc, r = r.vasc.crown.r05, epsilon = 0.5)
## crown.limits(time = crown.age.vasc, r = r.vasc.crown.r0.9, epsilon = 0.9)

## Stem age
stem.limits(time = stem.age.vasc, r = r.vasc.stem.r0, epsilon = 0)
stem.limits(time = stem.age.vasc, r = r.vasc.stem.r05, epsilon = 0.5)
stem.limits(time = stem.age.vasc, r = r.vasc.stem.r0.9, epsilon = 0.9)


### Generating table for plotting

## limits.vasc.crown <- data.frame(
##     time = seq(1, 250, by = 1),
##     t(mapply(crown.limits, seq(1, 250, by = 1), r = r.vasc.crown.r0, epsilon = 0)),
##     t(mapply(crown.limits, seq(1, 250, by = 1), r = r.vasc.crown.r05, epsilon = 0.5)),
##     t(mapply(crown.limits, seq(1, 250, by = 1), r = r.vasc.crown.r0.9, epsilon = 0.9))
##     )
## names(limits.vasc.crown) <- c("age", "lb.0", "ub.0", "lb.05", "ub.05", "lb.09", "ub.09")

limits.vasc.stem <- data.frame(
    time = seq(1, 300, by = 1),
    t(mapply(stem.limits, seq(1, 300, by = 1), r = r.vasc.stem.r0, epsilon = 0)),
    t(mapply(stem.limits, seq(1, 300, by = 1), r = r.vasc.stem.r05, epsilon = 0.5)),
    t(mapply(stem.limits, seq(1, 300, by = 1), r = r.vasc.stem.r0.9, epsilon = 0.9))
    )
names(limits.vasc.stem) <- c("age", "lb.0", "ub.0", "lb.05", "ub.05", "lb.09", "ub.09")



## Calculating Pagel's lambda for each epsilon value
phylosig.r0 <- pgls(r.e0.stem ~ 1, data = data.pgls, lambda = "ML")
phylosig.r05 <- pgls(r.e05.stem ~ 1, data = data.pgls, lambda = "ML")
phylosig.r09 <- pgls(r.e09.stem ~ 1, data = data.pgls, lambda = "ML")

## Fitting PGLS
mod.r0 <- caper::pgls(r.e0.stem ~ shannon, data = data.pgls, lambda = setNames(summary(phylosig.r0)$param[2], NULL))
mod.r05 <- caper::pgls(r.e05.stem ~ shannon, data = data.pgls, lambda = setNames(summary(phylosig.r05)$param[2], NULL))
mod.r09 <- caper::pgls(r.e09.stem ~ shannon, data = data.pgls, lambda = setNames(summary(phylosig.r09)$param[2], NULL))

## Fitting standard linear models
lm.r0 <- lm(r.e0.stem ~ shannon, data = family.data.clean)
lm.r05 <- lm(r.e05.stem ~ shannon, data = family.data.clean)
lm.r09 <- lm(r.e09.stem ~ shannon, data = family.data.clean)

## phylANOVA
data.aov <- family.data.clean[-which(is.na(match(family.data.clean$family, tree.pruned$tip.label))), ]
phyaov.r0 <- phylANOVA(drop.tip(tree.pruned, tip = tree.pruned$tip.label[is.na(match(tree.pruned$tip.label, data.aov$family))]), x = setNames(data.aov$type.60, data.aov$family), y = setNames(data.aov$r.e0.stem, data.aov$family))
phyaov.r05 <- phylANOVA(drop.tip(tree.pruned, tip = tree.pruned$tip.label[is.na(match(tree.pruned$tip.label, data.aov$family))]), x = setNames(data.aov$type.60, data.aov$family), y = setNames(data.aov$r.e05.stem, data.aov$family))
phyaov.r09 <- phylANOVA(drop.tip(tree.pruned, tip = tree.pruned$tip.label[is.na(match(tree.pruned$tip.label, data.aov$family))]), x = setNames(data.aov$type.60, data.aov$family), y = setNames(data.aov$r.e09.stem, data.aov$family))

## Parametric ANOVA
aov.r0 <- aov(r.e0.stem ~ type.60, data = family.data.clean)
aov.r05 <- aov(r.e05.stem ~ type.60, data = family.data.clean)
aov.r09 <- aov(r.e09.stem ~ type.60, data = family.data.clean)

## Appending results to original data frame for plotting
family.data.clean$lm.r0[which(!is.na(family.data.clean$r.e0.stem))] <- fitted(lm.r0)
family.data.clean$lm.r05[which(!is.na(family.data.clean$r.e05.stem))] <- fitted(lm.r05)
family.data.clean$lm.r09[which(!is.na(family.data.clean$r.e09.stem))] <- fitted(lm.r09)

family.data.clean$pgls.r0 <- fitted(mod.r0)[,1][match(family.data.clean$family, names(fitted(mod.r0)[,1]))]
family.data.clean$pgls.r05 <- fitted(mod.r05)[,1][match(family.data.clean$family, names(fitted(mod.r05)[,1]))]
family.data.clean$pgls.r09 <- fitted(mod.r09)[,1][match(family.data.clean$family, names(fitted(mod.r09)[,1]))]


## Age and Richness as a function of Shannon index 

pgls.crown.age.sh <- caper::pgls(crown.age ~ shannon, data = data.pgls, lambda = "ML")
pgls.stem.age.sh <- caper::pgls(stem.age ~ shannon, data = data.pgls, lambda = "ML")
pgls.rich.sh <- caper::pgls(global.rich ~ shannon, data = data.pgls, lambda = "ML")

lm.crown.age.sh <- lm(crown.age ~ shannon, data = family.data.clean)
lm.stem.age.sh <- lm(stem.age ~ shannon, data = family.data.clean)
lm.rich.sh <- lm(global.rich ~ shannon, data = family.data.clean)


## Comparing overlapping families between the three analyses to see how much can we 'trust' the genus-level analyses

classif.comp <- data.frame(
    family = family.data.clean$family,
    sp.50 = family.data.clean$type.50,
    sp.60 = family.data.clean$type.60,
    sp.80 = family.data.clean$type.80,
    sp.100 = family.data.clean$type.100,
    gen.50 = family.data.gen$type.50[match(family.data.clean$family, family.data.gen$family)],
    gen.60 = family.data.gen$type.60[match(family.data.clean$family, family.data.gen$family)],
    gen.80 = family.data.gen$type.80[match(family.data.clean$family, family.data.gen$family)],
    gen.100 = family.data.gen$type.100[match(family.data.clean$family, family.data.gen$family)],
    gen.50.valid = family.data.gen.valid$type.50[match(family.data.clean$family, family.data.gen.valid$family)],
    gen.60.valid = family.data.gen.valid$type.60[match(family.data.clean$family, family.data.gen.valid$family)],
    gen.80.valid = family.data.gen.valid$type.80[match(family.data.clean$family, family.data.gen.valid$family)],
    gen.100.valid = family.data.gen.valid$type.100[match(family.data.clean$family, family.data.gen.valid$family)],
    stringsAsFactors = FALSE
)

data.frame(
    thresh = c("50", "60", "80", "100"),
    perc.diff = c(sum(classif.comp[-115, "sp.50"] != classif.comp[-115, "gen.50"], na.rm = TRUE)/(dim(classif.comp)[1] - 1),
                  sum(classif.comp[-115, "sp.60"] != classif.comp[-115, "gen.60"], na.rm = TRUE)/(dim(classif.comp)[1] - 1),
                  sum(classif.comp[-115, "sp.80"] != classif.comp[-115, "gen.80"], na.rm = TRUE)/(dim(classif.comp)[1] - 1),
                  sum(classif.comp[-115, "sp.100"] != classif.comp[-115, "gen.100"], na.rm = TRUE)/(dim(classif.comp)[1] - 1))
)
